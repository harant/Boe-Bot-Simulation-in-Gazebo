<?xml version="1.0" ?>
<robot name="boebot" xmlns:xacro="http://www.ros.org/wiki/xacro" >

<xacro:property name="body_color" value="Gazebo/Grey" />
<xacro:property name="motor_color" value="Gazebo/DarkGrey" />
<xacro:property name="wheel_color" value="Gazebo/Black" />
<xacro:property name="circuit_color" value="Gazebo/Green" />
<xacro:property name="sensor_color" value="Gazebo/Blue" />

<gazebo>
  <plugin filename="libgazebo_ros_control.so" name="control"/>
</gazebo>

<gazebo reference="base_link">
  <material>${body_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <selfCollide>true</selfCollide>
  <gravity>true</gravity>
</gazebo>

<gazebo reference="motor_right_1">
  <material>${motor_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="motor_left_1">
  <material>${motor_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="caster_1">
  <material>${wheel_color}</material>
  <mu1>0.1</mu1>
  <mu2>0.1</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="arduino_1">
  <material>${circuit_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="obstacle_sensor_1">
  <material>${sensor_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="obstacle_sensor_left">
  <material>${sensor_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="obstacle_sensor_right">
  <material>${sensor_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="camera_1">
  <material>${wheel_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="wheel_left_1">
  <material>${wheel_color}</material>
  <mu1>1000.0</mu1>
  <mu2>1000.0</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="wheel_right_1">
  <material>${wheel_color}</material>
  <mu1>1000.0</mu1>
  <mu2>1000.0</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="camera_circuit_1">
  <material>${circuit_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo>
    <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
      <updateRate>20</updateRate>
      <robotBaseFrame>base_link</robotBaseFrame>
      <leftJoint>rev_left</leftJoint>
      <rightJoint>rev_right</rightJoint>
      <wheelSeparation>0.116</wheelSeparation>
      <wheelDiameter>0.065</wheelDiameter>
      <wheelAcceleration>1.0</wheelAcceleration>
      <wheelTorque>20</wheelTorque>
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <odometrySource>1</odometrySource>
      <publishWheelTF>false</publishWheelTF>
      <publishOdomTF>true</publishOdomTF>
      <publishOdom>true</publishOdom>
      <publishWheelJointState>true</publishWheelJointState>
      <legacyMode>false</legacyMode>
      <alwaysOn>true</alwaysOn>
    </plugin>
  </gazebo>

  <gazebo reference="camera_1">
    <sensor type="camera" name="camera">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>autobot/camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_1</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo reference="obstacle_sensor_1">        
   <sensor type="ray" name="obstacle_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>10</samples> 
            <resolution>1</resolution>
            <min_angle>-0.314159</min_angle>
            <max_angle>0.314159</max_angle>
            <!--<min_angle>-1.5708</min_angle> 
            <max_angle>1.5708</max_angle>-->
          </horizontal>
        </scan>
        <range>
          <min>0.01</min>
          <max>0.5</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>autobot/obstacle_sensor_front</topicName>
        <frameName>obstacle_sensor_1</frameName>
      </plugin>
    </sensor>
   </gazebo>

   <gazebo reference="obstacle_sensor_left">        
   <sensor type="ray" name="obstacle_sensor_left">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>10</samples>
            <resolution>1</resolution>
            <min_angle>-0.314159</min_angle>
            <max_angle>0.314159</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.01</min>
          <max>0.5</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>autobot/obstacle_sensor_left</topicName>
        <frameName>obstacle_sensor_left</frameName>
      </plugin>
    </sensor>
   </gazebo>

   <gazebo reference="obstacle_sensor_right">        
   <sensor type="ray" name="obstacle_sensor_right">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>10</samples>
            <resolution>1</resolution>
            <min_angle>-0.314159</min_angle>
            <max_angle>0.314159</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.01</min>
          <max>0.5</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>autobot/obstacle_sensor_right</topicName>
        <frameName>obstacle_sensor_right</frameName>
      </plugin>
    </sensor>
   </gazebo>



</robot>
